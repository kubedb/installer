apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  name: rediscaches.cache.azure.kubedb.com
spec:
  group: cache.azure.kubedb.com
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: RedisCache
    listKind: RedisCacheList
    plural: rediscaches
    singular: rediscache
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RedisCache is the Schema for the RedisCaches API. Manages a Redis
          Cache
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RedisCacheSpec defines the desired state of RedisCache
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  capacity:
                    description: The size of the Redis cache to deploy. Valid values
                      for a SKU family of C (Basic/Standard) are 0, 1, 2, 3, 4, 5,
                      6, and for P (Premium) family are 1, 2, 3, 4, 5.
                    type: number
                  enableNonSslPort:
                    description: Enable the non-SSL port (6379) - disabled by default.
                    type: boolean
                  family:
                    description: The SKU family/pricing group to use. Valid values
                      are C (for Basic/Standard SKU family) and P (for Premium)
                    type: string
                  identity:
                    description: An identity block as defined below.
                    items:
                      properties:
                        identityIds:
                          description: A list of User Assigned Managed Identity IDs
                            to be assigned to this Redis Cluster.
                          items:
                            type: string
                          type: array
                        type:
                          description: Specifies the type of Managed Service Identity
                            that should be configured on this Redis Cluster. Possible
                            values are SystemAssigned, UserAssigned, SystemAssigned,
                            UserAssigned (to enable both).
                          type: string
                      required:
                      - type
                      type: object
                    type: array
                  location:
                    description: The location of the resource group. Changing this
                      forces a new resource to be created.
                    type: string
                  minimumTlsVersion:
                    description: The minimum TLS version. Possible values are 1.0,
                      1.1 and 1.2. Defaults to 1.0.
                    type: string
                  patchSchedule:
                    description: A list of patch_schedule blocks as defined below.
                    items:
                      properties:
                        dayOfWeek:
                          description: the Weekday name - possible values include
                            Monday, Tuesday, Wednesday etc.
                          type: string
                        maintenanceWindow:
                          description: The ISO 8601 timespan which specifies the amount
                            of time the Redis Cache can be updated. Defaults to PT5H.
                          type: string
                        startHourUtc:
                          description: the Start Hour for maintenance in UTC - possible
                            values range from 0 - 23.
                          type: number
                      required:
                      - dayOfWeek
                      type: object
                    type: array
                  privateStaticIpAddress:
                    description: The Static IP Address to assign to the Redis Cache
                      when hosted inside the Virtual Network. This argument implies
                      the use of subnet_id. Changing this forces a new resource to
                      be created.
                    type: string
                  publicNetworkAccessEnabled:
                    description: Whether or not public network access is allowed for
                      this Redis Cache. true means this resource could be accessed
                      by both public and private endpoint. false means only private
                      endpoint access is allowed. Defaults to true.
                    type: boolean
                  redisConfiguration:
                    description: A redis_configuration as defined below - with some
                      limitations by SKU - defaults/details are shown below.
                    items:
                      properties:
                        aofBackupEnabled:
                          description: Enable or disable AOF persistence for this
                            Redis Cache. Defaults to false.
                          type: boolean
                        aofStorageConnectionString0SecretRef:
                          description: First Storage Account connection string for
                            AOF persistence.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        aofStorageConnectionString1SecretRef:
                          description: Second Storage Account connection string for
                            AOF persistence.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                        enableAuthentication:
                          description: If set to false, the Redis instance will be
                            accessible without authentication. Defaults to true.
                          type: boolean
                        maxfragmentationmemoryReserved:
                          description: Value in megabytes reserved to accommodate
                            for memory fragmentation. Defaults are shown below.
                          type: number
                        maxmemoryDelta:
                          description: The max-memory delta for this Redis instance.
                            Defaults are shown below.
                          type: number
                        maxmemoryPolicy:
                          description: How Redis will select what to remove when maxmemory
                            is reached. Defaults are shown below. Defaults to volatile-lru.
                          type: string
                        maxmemoryReserved:
                          description: Value in megabytes reserved for non-cache usage
                            e.g. failover. Defaults are shown below.
                          type: number
                        notifyKeyspaceEvents:
                          description: Keyspace notifications allows clients to subscribe
                            to Pub/Sub channels in order to receive events affecting
                            the Redis data set in some way. Reference
                          type: string
                        rdbBackupEnabled:
                          description: Is Backup Enabled? Only supported on Premium
                            SKUs. Defaults to false.
                          type: boolean
                        rdbBackupFrequency:
                          description: 'The Backup Frequency in Minutes. Only supported
                            on Premium SKUs. Possible values are: 15, 30, 60, 360,
                            720 and 1440.'
                          type: number
                        rdbBackupMaxSnapshotCount:
                          description: The maximum number of snapshots to create as
                            a backup. Only supported for Premium SKUs.
                          type: number
                        rdbStorageConnectionStringSecretRef:
                          description: 'The Connection String to the Storage Account.
                            Only supported for Premium SKUs. In the format: DefaultEndpointsProtocol=https;BlobEndpoint=${azurerm_storage_account.example.primary_blob_endpoint};AccountName=${azurerm_storage_account.example.name};AccountKey=${azurerm_storage_account.example.primary_access_key}.'
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              description: Name of the secret.
                              type: string
                            namespace:
                              description: Namespace of the secret.
                              type: string
                          required:
                          - key
                          - name
                          - namespace
                          type: object
                      type: object
                    type: array
                  redisVersion:
                    description: 'Redis version. Only major version needed. Valid
                      values: 4, 6.'
                    type: string
                  replicasPerMaster:
                    description: Amount of replicas to create per master for this
                      Redis Cache.
                    type: number
                  replicasPerPrimary:
                    description: Amount of replicas to create per primary for this
                      Redis Cache. If both replicas_per_primary and replicas_per_master
                      are set, they need to be equal.
                    type: number
                  resourceGroupName:
                    description: The name of the resource group in which to create
                      the Redis instance. Changing this forces a new resource to be
                      created.
                    type: string
                  shardCount:
                    description: Only available when using the Premium SKU The number
                      of Shards to create on the Redis Cluster.
                    type: number
                  skuName:
                    description: The SKU of Redis to use. Possible values are Basic,
                      Standard and Premium.
                    type: string
                  subnetId:
                    description: Only available when using the Premium SKU The ID
                      of the Subnet within which the Redis Cache should be deployed.
                      This Subnet must only contain Azure Cache for Redis instances
                      without any other type of resources. Changing this forces a
                      new resource to be created.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags to assign to the resource.
                    type: object
                  tenantSettings:
                    additionalProperties:
                      type: string
                    description: A mapping of tenant settings to assign to the resource.
                    type: object
                  zones:
                    description: Specifies a list of Availability Zones in which this
                      Redis Cache should be located. Changing this forces a new Redis
                      Cache to be created.
                    items:
                      type: string
                    type: array
                required:
                - resourceGroupName
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: capacity is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.capacity)
            - message: family is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.family)
            - message: location is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.location)
            - message: redisVersion is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.redisVersion)
            - message: skuName is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.skuName)
          status:
            description: RedisCacheStatus defines the observed state of RedisCache.
            properties:
              atProvider:
                properties:
                  capacity:
                    description: The size of the Redis cache to deploy. Valid values
                      for a SKU family of C (Basic/Standard) are 0, 1, 2, 3, 4, 5,
                      6, and for P (Premium) family are 1, 2, 3, 4, 5.
                    type: number
                  enableNonSslPort:
                    description: Enable the non-SSL port (6379) - disabled by default.
                    type: boolean
                  family:
                    description: The SKU family/pricing group to use. Valid values
                      are C (for Basic/Standard SKU family) and P (for Premium)
                    type: string
                  hostname:
                    description: The Hostname of the Redis Instance
                    type: string
                  id:
                    description: The Route ID.
                    type: string
                  identity:
                    description: An identity block as defined below.
                    items:
                      properties:
                        identityIds:
                          description: A list of User Assigned Managed Identity IDs
                            to be assigned to this Redis Cluster.
                          items:
                            type: string
                          type: array
                        principalId:
                          description: The Route ID.
                          type: string
                        tenantId:
                          description: The Route ID.
                          type: string
                        type:
                          description: Specifies the type of Managed Service Identity
                            that should be configured on this Redis Cluster. Possible
                            values are SystemAssigned, UserAssigned, SystemAssigned,
                            UserAssigned (to enable both).
                          type: string
                      type: object
                    type: array
                  location:
                    description: The location of the resource group. Changing this
                      forces a new resource to be created.
                    type: string
                  minimumTlsVersion:
                    description: The minimum TLS version. Possible values are 1.0,
                      1.1 and 1.2. Defaults to 1.0.
                    type: string
                  patchSchedule:
                    description: A list of patch_schedule blocks as defined below.
                    items:
                      properties:
                        dayOfWeek:
                          description: the Weekday name - possible values include
                            Monday, Tuesday, Wednesday etc.
                          type: string
                        maintenanceWindow:
                          description: The ISO 8601 timespan which specifies the amount
                            of time the Redis Cache can be updated. Defaults to PT5H.
                          type: string
                        startHourUtc:
                          description: the Start Hour for maintenance in UTC - possible
                            values range from 0 - 23.
                          type: number
                      type: object
                    type: array
                  port:
                    description: The non-SSL Port of the Redis Instance
                    type: number
                  privateStaticIpAddress:
                    description: The Static IP Address to assign to the Redis Cache
                      when hosted inside the Virtual Network. This argument implies
                      the use of subnet_id. Changing this forces a new resource to
                      be created.
                    type: string
                  publicNetworkAccessEnabled:
                    description: Whether or not public network access is allowed for
                      this Redis Cache. true means this resource could be accessed
                      by both public and private endpoint. false means only private
                      endpoint access is allowed. Defaults to true.
                    type: boolean
                  redisConfiguration:
                    description: A redis_configuration as defined below - with some
                      limitations by SKU - defaults/details are shown below.
                    items:
                      properties:
                        aofBackupEnabled:
                          description: Enable or disable AOF persistence for this
                            Redis Cache. Defaults to false.
                          type: boolean
                        enableAuthentication:
                          description: If set to false, the Redis instance will be
                            accessible without authentication. Defaults to true.
                          type: boolean
                        maxclients:
                          description: Returns the max number of connected clients
                            at the same time.
                          type: number
                        maxfragmentationmemoryReserved:
                          description: Value in megabytes reserved to accommodate
                            for memory fragmentation. Defaults are shown below.
                          type: number
                        maxmemoryDelta:
                          description: The max-memory delta for this Redis instance.
                            Defaults are shown below.
                          type: number
                        maxmemoryPolicy:
                          description: How Redis will select what to remove when maxmemory
                            is reached. Defaults are shown below. Defaults to volatile-lru.
                          type: string
                        maxmemoryReserved:
                          description: Value in megabytes reserved for non-cache usage
                            e.g. failover. Defaults are shown below.
                          type: number
                        notifyKeyspaceEvents:
                          description: Keyspace notifications allows clients to subscribe
                            to Pub/Sub channels in order to receive events affecting
                            the Redis data set in some way. Reference
                          type: string
                        rdbBackupEnabled:
                          description: Is Backup Enabled? Only supported on Premium
                            SKUs. Defaults to false.
                          type: boolean
                        rdbBackupFrequency:
                          description: 'The Backup Frequency in Minutes. Only supported
                            on Premium SKUs. Possible values are: 15, 30, 60, 360,
                            720 and 1440.'
                          type: number
                        rdbBackupMaxSnapshotCount:
                          description: The maximum number of snapshots to create as
                            a backup. Only supported for Premium SKUs.
                          type: number
                      type: object
                    type: array
                  redisVersion:
                    description: 'Redis version. Only major version needed. Valid
                      values: 4, 6.'
                    type: string
                  replicasPerMaster:
                    description: Amount of replicas to create per master for this
                      Redis Cache.
                    type: number
                  replicasPerPrimary:
                    description: Amount of replicas to create per primary for this
                      Redis Cache. If both replicas_per_primary and replicas_per_master
                      are set, they need to be equal.
                    type: number
                  resourceGroupName:
                    description: The name of the resource group in which to create
                      the Redis instance. Changing this forces a new resource to be
                      created.
                    type: string
                  shardCount:
                    description: Only available when using the Premium SKU The number
                      of Shards to create on the Redis Cluster.
                    type: number
                  skuName:
                    description: The SKU of Redis to use. Possible values are Basic,
                      Standard and Premium.
                    type: string
                  sslPort:
                    description: The SSL Port of the Redis Instance
                    type: number
                  subnetId:
                    description: Only available when using the Premium SKU The ID
                      of the Subnet within which the Redis Cache should be deployed.
                      This Subnet must only contain Azure Cache for Redis instances
                      without any other type of resources. Changing this forces a
                      new resource to be created.
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: A mapping of tags to assign to the resource.
                    type: object
                  tenantSettings:
                    additionalProperties:
                      type: string
                    description: A mapping of tenant settings to assign to the resource.
                    type: object
                  zones:
                    description: Specifies a list of Availability Zones in which this
                      Redis Cache should be located. Changing this forces a new Redis
                      Cache to be created.
                    items:
                      type: string
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
