apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: gremlingraphs.cosmosdb.azure.kubedb.com
spec:
  group: cosmosdb.azure.kubedb.com
  names:
    categories:
    - crossplane
    - managed
    - azure
    kind: GremlinGraph
    listKind: GremlinGraphList
    plural: gremlingraphs
    singular: gremlingraph
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GremlinGraph is the Schema for the GremlinGraphs API. Manages
          a Gremlin Graph within a Cosmos DB Account.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GremlinGraphSpec defines the desired state of GremlinGraph
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountName:
                    description: The name of the CosmosDB Account to create the Gremlin
                      Graph within. Changing this forces a new resource to be created.
                    type: string
                  autoscaleSettings:
                    description: An autoscale_settings block as defined below. Requires
                      partition_key_path to be set.
                    items:
                      properties:
                        maxThroughput:
                          description: The maximum throughput of the Gremlin graph
                            (RU/s). Must be between 1,000 and 1,000,000. Must be set
                            in increments of 1,000. Conflicts with throughput.
                          type: number
                      type: object
                    type: array
                  conflictResolutionPolicy:
                    description: A conflict_resolution_policy blocks as defined below.
                      Changing this forces a new resource to be created.
                    items:
                      properties:
                        conflictResolutionPath:
                          description: The conflict resolution path in the case of
                            LastWriterWins mode.
                          type: string
                        conflictResolutionProcedure:
                          description: The procedure to resolve conflicts in the case
                            of custom mode.
                          type: string
                        mode:
                          description: 'Indicates the conflict resolution mode. Possible
                            values include: LastWriterWins, Custom.'
                          type: string
                      required:
                      - mode
                      type: object
                    type: array
                  databaseName:
                    description: The name of the Cosmos DB Graph Database in which
                      the Cosmos DB Gremlin Graph is created. Changing this forces
                      a new resource to be created.
                    type: string
                  databaseNameRef:
                    description: Reference to a GremlinDatabase to populate databaseName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  databaseNameSelector:
                    description: Selector for a GremlinDatabase to populate databaseName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  defaultTtl:
                    description: The default time to live (TTL) of the Gremlin graph.
                      If the value is missing or set to "-1", items donâ€™t expire.
                    type: number
                  indexPolicy:
                    description: The configuration of the indexing policy. One or
                      more index_policy blocks as defined below.
                    items:
                      properties:
                        automatic:
                          description: Indicates if the indexing policy is automatic.
                            Defaults to true.
                          type: boolean
                        compositeIndex:
                          description: One or more composite_index blocks as defined
                            below.
                          items:
                            properties:
                              index:
                                description: One or more index blocks as defined below.
                                items:
                                  properties:
                                    order:
                                      description: Order of the index. Possible values
                                        are Ascending or Descending.
                                      type: string
                                    path:
                                      description: Path for which the indexing behaviour
                                        applies to. According to the service design,
                                        all spatial types including LineString, MultiPolygon,
                                        Point, and Polygon will be applied to the
                                        path.
                                      type: string
                                  required:
                                  - order
                                  - path
                                  type: object
                                type: array
                            required:
                            - index
                            type: object
                          type: array
                        excludedPaths:
                          description: List of paths to exclude from indexing. Required
                            if indexing_mode is Consistent or Lazy.
                          items:
                            type: string
                          type: array
                        includedPaths:
                          description: List of paths to include in the indexing. Required
                            if indexing_mode is Consistent or Lazy.
                          items:
                            type: string
                          type: array
                        indexingMode:
                          description: 'Indicates the indexing mode. Possible values
                            include: Consistent, Lazy, None.'
                          type: string
                        spatialIndex:
                          description: One or more spatial_index blocks as defined
                            below.
                          items:
                            properties:
                              path:
                                description: Path for which the indexing behaviour
                                  applies to. According to the service design, all
                                  spatial types including LineString, MultiPolygon,
                                  Point, and Polygon will be applied to the path.
                                type: string
                            required:
                            - path
                            type: object
                          type: array
                      required:
                      - indexingMode
                      type: object
                    type: array
                  partitionKeyPath:
                    description: Define a partition key. Changing this forces a new
                      resource to be created.
                    type: string
                  partitionKeyVersion:
                    description: Define a partition key version. Changing this forces
                      a new resource to be created. Possible values are 1and 2. This
                      should be set to 2 in order to use large partition keys.
                    type: number
                  resourceGroupName:
                    description: The name of the resource group in which the Cosmos
                      DB Gremlin Graph is created. Changing this forces a new resource
                      to be created.
                    type: string
                  throughput:
                    description: The throughput of the Gremlin graph (RU/s). Must
                      be set in increments of 100. The minimum value is 400.
                    type: number
                  uniqueKey:
                    description: One or more unique_key blocks as defined below. Changing
                      this forces a new resource to be created.
                    items:
                      properties:
                        paths:
                          description: A list of paths to use for this unique key.
                            Changing this forces a new resource to be created.
                          items:
                            type: string
                          type: array
                      required:
                      - paths
                      type: object
                    type: array
                required:
                - accountName
                - resourceGroupName
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: partitionKeyPath is a required parameter
              rule: self.managementPolicy == 'ObserveOnly' || has(self.forProvider.partitionKeyPath)
          status:
            description: GremlinGraphStatus defines the observed state of GremlinGraph.
            properties:
              atProvider:
                properties:
                  accountName:
                    description: The name of the CosmosDB Account to create the Gremlin
                      Graph within. Changing this forces a new resource to be created.
                    type: string
                  autoscaleSettings:
                    description: An autoscale_settings block as defined below. Requires
                      partition_key_path to be set.
                    items:
                      properties:
                        maxThroughput:
                          description: The maximum throughput of the Gremlin graph
                            (RU/s). Must be between 1,000 and 1,000,000. Must be set
                            in increments of 1,000. Conflicts with throughput.
                          type: number
                      type: object
                    type: array
                  conflictResolutionPolicy:
                    description: A conflict_resolution_policy blocks as defined below.
                      Changing this forces a new resource to be created.
                    items:
                      properties:
                        conflictResolutionPath:
                          description: The conflict resolution path in the case of
                            LastWriterWins mode.
                          type: string
                        conflictResolutionProcedure:
                          description: The procedure to resolve conflicts in the case
                            of custom mode.
                          type: string
                        mode:
                          description: 'Indicates the conflict resolution mode. Possible
                            values include: LastWriterWins, Custom.'
                          type: string
                      type: object
                    type: array
                  databaseName:
                    description: The name of the Cosmos DB Graph Database in which
                      the Cosmos DB Gremlin Graph is created. Changing this forces
                      a new resource to be created.
                    type: string
                  defaultTtl:
                    description: The default time to live (TTL) of the Gremlin graph.
                      If the value is missing or set to "-1", items donâ€™t expire.
                    type: number
                  id:
                    description: The ID of the CosmosDB Gremlin Graph.
                    type: string
                  indexPolicy:
                    description: The configuration of the indexing policy. One or
                      more index_policy blocks as defined below.
                    items:
                      properties:
                        automatic:
                          description: Indicates if the indexing policy is automatic.
                            Defaults to true.
                          type: boolean
                        compositeIndex:
                          description: One or more composite_index blocks as defined
                            below.
                          items:
                            properties:
                              index:
                                description: One or more index blocks as defined below.
                                items:
                                  properties:
                                    order:
                                      description: Order of the index. Possible values
                                        are Ascending or Descending.
                                      type: string
                                    path:
                                      description: Path for which the indexing behaviour
                                        applies to. According to the service design,
                                        all spatial types including LineString, MultiPolygon,
                                        Point, and Polygon will be applied to the
                                        path.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        excludedPaths:
                          description: List of paths to exclude from indexing. Required
                            if indexing_mode is Consistent or Lazy.
                          items:
                            type: string
                          type: array
                        includedPaths:
                          description: List of paths to include in the indexing. Required
                            if indexing_mode is Consistent or Lazy.
                          items:
                            type: string
                          type: array
                        indexingMode:
                          description: 'Indicates the indexing mode. Possible values
                            include: Consistent, Lazy, None.'
                          type: string
                        spatialIndex:
                          description: One or more spatial_index blocks as defined
                            below.
                          items:
                            properties:
                              path:
                                description: Path for which the indexing behaviour
                                  applies to. According to the service design, all
                                  spatial types including LineString, MultiPolygon,
                                  Point, and Polygon will be applied to the path.
                                type: string
                              types:
                                items:
                                  type: string
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  partitionKeyPath:
                    description: Define a partition key. Changing this forces a new
                      resource to be created.
                    type: string
                  partitionKeyVersion:
                    description: Define a partition key version. Changing this forces
                      a new resource to be created. Possible values are 1and 2. This
                      should be set to 2 in order to use large partition keys.
                    type: number
                  resourceGroupName:
                    description: The name of the resource group in which the Cosmos
                      DB Gremlin Graph is created. Changing this forces a new resource
                      to be created.
                    type: string
                  throughput:
                    description: The throughput of the Gremlin graph (RU/s). Must
                      be set in increments of 100. The minimum value is 400.
                    type: number
                  uniqueKey:
                    description: One or more unique_key blocks as defined below. Changing
                      this forces a new resource to be created.
                    items:
                      properties:
                        paths:
                          description: A list of paths to use for this unique key.
                            Changing this forces a new resource to be created.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
