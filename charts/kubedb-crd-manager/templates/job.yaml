{{ $featureGates := .Values.featureGates }}
{{- if .Values.global }}
  {{ $featureGates = mergeOverwrite dict .Values.featureGates .Values.global.featureGates }}
{{- end }}

{{- $nodeSelector := .Values.nodeSelector }}
{{- if .Values.global }}
  {{ $nodeSelector = default .Values.nodeSelector .Values.global.nodeSelector }}
{{- end }}

{{- $tolerations := .Values.tolerations }}
{{- if .Values.global }}
  {{ $tolerations = default .Values.tolerations .Values.global.tolerations }}
{{- end }}

{{- $affinity := .Values.affinity }}
{{- if .Values.global }}
  {{ $affinity = default .Values.affinity .Values.global.affinity }}
{{- end }}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "kubedb-crd-manager.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedb-crd-manager.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook-weight": "3"
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  backoffLimit: 3
  {{- if ge (int .Values.ttlSecondsAfterFinished) 0 }}
  ttlSecondsAfterFinished: {{ .Values.ttlSecondsAfterFinished }}
  {{- end }}
  manualSelector: true
  selector:
    matchLabels:
      {{- include "kubedb-crd-manager.labels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "kubedb-crd-manager.labels" . | nindent 8 }}
    spec:
      {{- include "docker.imagePullSecrets" . | nindent 6 }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ include "kubedb-crd-manager.serviceAccountName" . }}
      initContainers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "image.registry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - run
            - --v=3
            - --remove-unused-crds={{ .Values.removeUnusedCRDs }}
          {{- range $db, $enable := $featureGates }}
            - --feature-gates={{ $db }}={{ $enable }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      containers:
        - name: verifier
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "image.registry" . }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          args:
            - verify
            - --v=3
          {{- range $db, $enable := $featureGates }}
            - --feature-gates={{ $db }}={{ $enable }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with $nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
