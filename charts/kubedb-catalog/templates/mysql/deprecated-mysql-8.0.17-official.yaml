{{ $featureGates := .Values.featureGates }}
{{- if .Values.global }}
  {{ $featureGates = mergeOverwrite dict .Values.featureGates .Values.global.featureGates }}
{{- end }}

{{ if $featureGates.MySQL }}
{{ if or (not .Values.skipDeprecated) (has "8.0.17" .Values.enableVersions.MySQL) }}
apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.0.17'
  labels:
    {{- include "kubedb-catalog.labels" . | nindent 4 }}
spec:
  coordinator:
    image: '{{ include "image.ghcr" (merge (dict "_repo" "kubedb/mysql-coordinator") $) }}:v0.31.0-rc.1'
  db:
    image: '{{ include "image.dockerLibrary" (merge (dict "_repo" "mysql") $) }}:8.0.17'
  distribution: Official
  exporter:
    image: '{{ include "image.ghcr" (merge (dict "_repo" "kubedb/mysqld-exporter") $) }}:v0.13.1'
  gitSyncer:
    image: '{{ include "image.kubernetes" (merge (dict "_repo" "git-sync/git-sync") $) }}:v4.2.1'
  initContainer:
    image: '{{ include "image.ghcr" (merge (dict "_repo" "kubedb/mysql-init") $) }}:8.0.3-v2'
  replicationModeDetector:
    image: '{{ include "image.ghcr" (merge (dict "_repo" "kubedb/replication-mode-detector") $) }}:v0.40.0-rc.1'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.3
      restoreTask:
        name: mysql-restore-8.0.3
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.0.17
      standalone:
      - < 8.0.17
  version: 8.0.17
  podSecurityPolicies:
    databasePolicyName: {{ ternary "mysql-db" "" (and .Values.psp.enabled (.Capabilities.APIVersions.Has "policy/v1beta1/PodSecurityPolicy")) }}
  deprecated: {{ not (has "8.0.17" .Values.enableVersions.MySQL) }}
{{ end }}
{{ end }}
