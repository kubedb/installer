{{ $featureGates := .Values.featureGates }}
{{- if .Values.global }}
  {{ $featureGates = mergeOverwrite dict .Values.featureGates .Values.global.featureGates }}
{{- end }}

{{ if $featureGates.MySQL }}

apiVersion: catalog.kubedb.com/v1alpha1
kind: MySQLVersion
metadata:
  name: '8.0.35'
  labels:
    {{- include "kubedb-catalog.labels" . | nindent 4 }}
spec:
  archiver:
    addon:
      name: mysql-addon
      tasks:
        manifestBackup:
          name: manifest-backup
        manifestRestore:
          name: manifest-restore
        volumeSnapshot:
          name: volume-snapshot
    walg:
      image: '{{ include "image.ghcr" (merge (dict "_repo" "kubedb/mysql-archiver") $) }}:v0.4.0-rc.0_8.0.35'
  coordinator:
    image: '{{ include "image.ghcr" (merge (dict "_repo" "kubedb/mysql-coordinator") $) }}:v0.21.0-rc.0'
  db:
    image: '{{ include "image.ghcr" (merge (dict "_repo" "appscode-images/mysql") $) }}:8.0.35-oracle'
  distribution: Official
  exporter:
    image: '{{ include "image.ghcr" (merge (dict "_repo" "kubedb/mysqld-exporter") $) }}:v0.13.1'
  gitSyncer:
    image: '{{ include "image.kubernetes" (merge (dict "_repo" "git-sync/git-sync") $) }}:v4.2.1'
  initContainer:
    image: '{{ include "image.ghcr" (merge (dict "_repo" "kubedb/mysql-init") $) }}:8.0.31-v3'
  podSecurityPolicies:
    databasePolicyName: mysql-db
  replicationModeDetector:
    image: '{{ include "image.ghcr" (merge (dict "_repo" "kubedb/replication-mode-detector") $) }}:v0.30.0-rc.0'
  securityContext:
    runAsUser: 999
  stash:
    addon:
      backupTask:
        name: mysql-backup-8.0.21
      restoreTask:
        name: mysql-restore-8.0.21
  updateConstraints:
    denylist:
      groupReplication:
      - < 8.0.35
      standalone:
      - < 8.0.35
  version: 8.0.35
{{ end }}
