{{ if .Values.catalog.mongodb }}
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '4.0.3-v1'
  labels:
    {{- include "kubedb-catalog.labels" . | nindent 4 }}
spec:
  db:
    image: '{{ include "official.registry" (set (.Values | deepCopy) "officialRegistry" (list "mongo")) }}:4.0.3'
  distribution: MongoDB
  exporter:
    image: '{{ include "catalog.registry" . }}/mongodb_exporter:v0.20.4'
  initContainer:
    image: '{{ include "catalog.registry" . }}/mongodb-init:4.1-v2'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: '{{ include "catalog.registry" . }}/replication-mode-detector:v0.8.0'
  stash:
    addon:
      backupTask:
        name: mongodb-backup-4.0.3
      restoreTask:
        name: mongodb-restore-4.0.3
  version: 4.0.3
{{ end }}

---
{{ if and .Values.catalog.mongodb (not .Values.skipDeprecated) }}
apiVersion: catalog.kubedb.com/v1alpha1
kind: MongoDBVersion
metadata:
  name: '4.0.3'
  labels:
    {{- include "kubedb-catalog.labels" . | nindent 4 }}
spec:
  db:
    image: '{{ include "catalog.registry" . }}/mongo:4.0.3'
  deprecated: true
  distribution: MongoDB
  exporter:
    image: '{{ include "catalog.registry" . }}/mongodb_exporter:v0.20.4'
  initContainer:
    image: '{{ include "catalog.registry" . }}/busybox'
  podSecurityPolicies:
    databasePolicyName: mongodb-db
  replicationModeDetector:
    image: '{{ include "catalog.registry" . }}/replication-mode-detector:v0.8.0'
  version: 4.0.3
{{ end }}
