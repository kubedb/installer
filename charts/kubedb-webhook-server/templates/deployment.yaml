{{- $major := default "0" .Capabilities.KubeVersion.Major | trimSuffix "+" | int64 }}
{{- $minor := default "0" .Capabilities.KubeVersion.Minor | trimSuffix "+" | int64 }}
{{- $criticalAddon := and .Values.criticalAddon (or (eq .Release.Namespace "kube-system") (and (ge $major 1) (ge $minor 17))) -}}

{{- $nodeSelector := .Values.nodeSelector }}
{{- if .Values.global }}
  {{ $nodeSelector = default .Values.nodeSelector .Values.global.nodeSelector }}
{{- end }}

{{- $tolerations := .Values.tolerations }}
{{- if .Values.global }}
  {{ $tolerations = default .Values.tolerations .Values.global.tolerations }}
{{- end }}

{{- $affinity := .Values.affinity }}
{{- if .Values.global }}
  {{ $affinity = default .Values.affinity .Values.global.affinity }}
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubedb-webhook-server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedb-webhook-server.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kubedb-webhook-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kubedb-webhook-server.selectorLabels" . | nindent 8 }}
      annotations:
        reload: {{ randAlpha 8 }}
      {{- if $criticalAddon }}
        scheduler.alpha.kubernetes.io/critical-pod: ''
      {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.global }}
      readinessGates:
      - conditionType: "kubedb.com/conversion"
      {{- end }}
      {{- include "docker.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "kubedb-webhook-server.serviceAccountName" . }}
      containers:
      - name: operator
        securityContext:
          {{- toYaml .Values.server.securityContext | nindent 10 }}
        image: {{ include "server.registry" . }}/{{ .Values.server.repository }}:{{ .Values.server.tag | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.imagePullPolicy  }}
        args:
        - run
        - --v={{ .Values.logLevel }}
        - --leader-elect=false
        - --metrics-secure=true
        - --metrics-bind-address=:8443
        - --health-probe-bind-address=:8081
        - --cert-dir=/var/serving-cert
        {{- with .Values.defaultSeccompProfileType }}
        - --default-seccomp-profile-type={{ . }}
        {{- end }}
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8081
          name: healthz
          protocol: TCP
        - containerPort: 8443
          name: metrics
          protocol: TCP
        - containerPort: {{ .Values.apiserver.port }}
          name: https
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp
          name: tmpdir
        - mountPath: /var/serving-cert
          name: serving-cert
      {{- if .Values.apiserver.healthcheck.enabled }}
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      {{- end }}
        resources:
          {{- toYaml .Values.server.resources | nindent 10 }}
      volumes:
      - name: tmpdir
        emptyDir: {}
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: {{ include "kubedb-webhook-server.fullname" . }}-cert
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if or $tolerations $criticalAddon }}
      tolerations:
      {{- with $tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $criticalAddon }}
        - key: CriticalAddonsOnly
          operator: Exists
      {{- end -}}
    {{- end -}}
    {{- with $affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if $criticalAddon }}
      priorityClassName: system-cluster-critical
    {{- end -}}
    {{- if .Values.hostNetwork }}
      hostNetwork: true
    {{- end }}
