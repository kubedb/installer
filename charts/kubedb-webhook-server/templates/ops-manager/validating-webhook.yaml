{{- if .Values.apiserver.enableValidatingWebhook }}
{{- if list "kubedb-webhook-server" "kubedb-ops-manager" | has .Values.server.repository }}

{{- $caCrt := dig "data" "ca.crt" "unknown" (lookup "v1" "ConfigMap" .Release.Namespace "kube-root-ca.crt") | b64enc }}

apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.ops.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    {{- include "kubedb-webhook-server.labels" . | nindent 4 }}
webhooks:
- name: mysqlopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mysqlopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqlopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: mongodbopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mongodbopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: elasticsearchopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/elasticsearchopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["elasticsearchopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: redisopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/redisopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["redisopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: publisherwebhook.validators.postgres.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.postgres.kubedb.com/v1alpha1/publisherwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["postgres.kubedb.com"]
    apiVersions: ["*"]
    resources: ["publishers"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
- name: subscriberwebhook.validators.postgres.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.postgres.kubedb.com/v1alpha1/subscriberwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["postgres.kubedb.com"]
    apiVersions: ["*"]
    resources: ["subscribers"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
{{- end }}
{{- end }}
