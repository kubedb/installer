{{ $featureGates := .Values.featureGates }}
{{- if .Values.global }}
  {{ $featureGates = mergeOverwrite dict .Values.featureGates .Values.global.featureGates }}
{{- end }}

{{- if .Values.apiserver.enableValidatingWebhook }}
{{- if list "kubedb-webhook-server" "kubedb-ops-manager" | has .Values.server.repository }}

{{- $caCrt := dig "data" "ca.crt" "unknown" (lookup "v1" "ConfigMap" .Release.Namespace "kube-root-ca.crt") | b64enc }}

apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.ops.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-ops-manager
    {{- include "kubedb-webhook-server.labels" . | nindent 4 }}
webhooks:
{{- if $featureGates.Druid }}
- name: druidopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/druidopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["druidopsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Elasticsearch }}
- name: elasticsearchopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/elasticsearchopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["elasticsearchopsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.FerretDB }}
- name: ferretdbopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/ferretdbopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["ferretdbopsrequestwebhooks"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Kafka }}
- name: kafkaopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/kafkaopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["kafkaopsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Fail
  sideEffects: None
{{- end }}
{{- if $featureGates.MariaDB }}
- name: mariadbopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mariadbopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mariadbopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Memcached }}
- name: memcachedopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/memcachedopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["memcachedopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.MongoDB }}
- name: mongodbopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mongodbopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mongodbopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.MSSQLServer }}
- name: mssqlserveropsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mssqlserveropsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["mssqlserveropsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.MySQL }}
- name: mysqlopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/mysqlopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["mysqlopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.PerconaXtraDB }}
- name: perconaxtradbdbopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/perconaxtradbopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["perconaxtradbopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.PgBouncer }}
- name: pgbounceropsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/pgbounceropsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["pgbounceropsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Pgpool }}
- name: pgpoolopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/pgpoolopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["pgpoolopsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Postgres }}
- name: publisherwebhook.validators.postgres.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.postgres.kubedb.com/v1alpha1/publisherwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["postgres.kubedb.com"]
      apiVersions: ["*"]
      resources: ["publishers"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
- name: subscriberwebhook.validators.postgres.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.postgres.kubedb.com/v1alpha1/subscriberwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["postgres.kubedb.com"]
      apiVersions: ["*"]
      resources: ["subscribers"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.RabbitMQ }}
- name: rabbitmqopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/rabbitmqopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["rabbitmqopsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Redis }}
- name: redisopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/redisopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["redisopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
- name: redissentinelopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/redissentinelopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["redissentinelopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Singlestore }}
- name: singlestoreopsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/singlestoreopsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["ops.kubedb.com"]
    apiVersions: ["*"]
    resources: ["singlestoreopsrequests"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Solr }}
- name: solropsrequestwebhook.validators.ops.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.ops.kubedb.com/v1alpha1/solropsrequestwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["ops.kubedb.com"]
      apiVersions: ["*"]
      resources: ["solropsrequests"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- end }}
{{- end }}
