{{ template "kubedb-webhook-server.prepare-certs" $ }}

{{ $featureGates := .Values.featureGates }}
{{- if .Values.global }}
  {{ $featureGates = mergeOverwrite dict .Values.featureGates .Values.global.featureGates }}
{{- end }}

{{- if .Values.apiserver.enableValidatingWebhook }}
{{- if not (list "kubedb-autoscaler" "kubedb-dashboard" "kubedb-ops-manager" "kubedb-schema-manager" | has .Values.server.repository) }}

{{- $caCrt := dig "data" "ca.crt" "unknown" (lookup "v1" "ConfigMap" .Release.Namespace "kube-root-ca.crt") | b64enc }}

apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: validators.kubedb.com
  labels:
    app.kubernetes.io/component: kubedb-provisioner
    {{- include "kubedb-webhook-server.labels" . | nindent 4 }}
webhooks:
- name: namespacewebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/namespacewebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: [""]
    apiVersions: ["*"]
    resources: ["namespaces"]
    operations: ["DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: Ignore
  sideEffects: None
{{- if $featureGates.Elasticsearch }}
- name: elasticsearchwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kubedb-webhook-server.fullname" . }}
      path: /validate-kubedb-com-v1-elasticsearch
      port: 9443
    caBundle: {{ $._caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["v1"]
    resources: ["elasticsearches"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Postgres }}
- name: postgreswebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kubedb-webhook-server.fullname" . }}
      path: /validate-kubedb-com-v1-postgres
      port: 9443
    caBundle: {{ $._caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["v1"]
    resources: ["postgreses"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
  matchPolicy: Equivalent
{{- end }}
{{- if $featureGates.FerretDB }}
- name: ferretdbwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/ferretdbwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["ferretdbs"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.MySQL }}
- name: mysqlwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kubedb-webhook-server.fullname" . }}
      path: /validate-kubedb-com-v1-mysql
      port: 9443
    caBundle: {{ $._caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["v1"]
    resources: ["mysqls"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.PerconaXtraDB }}
- name: perconaxtradbwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kubedb-webhook-server.fullname" . }}
      path: /validate-kubedb-com-v1-perconaxtradb
      port: 9443
    caBundle: {{ $._caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["v1"]
    resources: ["perconaxtradbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.MongoDB }}
- name: mongodbwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kubedb-webhook-server.fullname" . }}
      path: /validate-kubedb-com-v1-mongodb
      port: 9443
    caBundle: {{ $._caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["v1"]
    resources: ["mongodbs"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Redis }}
- name: rediswebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kubedb-webhook-server.fullname" . }}
      path: /validate-kubedb-com-v1-redis
      port: 9443
    caBundle: {{ $._caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["v1"]
    resources: ["redises"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
- name: redissentinelwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kubedb-webhook-server.fullname" . }}
      path: /validate-kubedb-com-v1-redissentinel
      port: 9443
    caBundle: {{ $._caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["v1"]
      resources: ["redissentinels"]
      operations: ["CREATE", "UPDATE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Memcached }}
- name: memcachedwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kubedb-webhook-server.fullname" . }}
      path: /validate-kubedb-com-v1-memcached
      port: 9443
    caBundle: {{ $._caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["v1"]
    resources: ["memcacheds"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Etcd }}
- name: etcdwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/etcdwebhooks
    caBundle: {{ $caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["*"]
    resources: ["etcds"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.PgBouncer }}
- name: pgbouncerwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kubedb-webhook-server.fullname" . }}
      path: /validate-kubedb-com-v1-pgbouncer
      port: 9443
    caBundle: {{ $._caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["v1"]
    resources: ["pgbouncers"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.ProxySQL }}
- name: proxysqlwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kubedb-webhook-server.fullname" . }}
      path: /validate-kubedb-com-v1-proxysql
      port: 9443
    caBundle: {{ $._caCrt }}
  rules:
  - apiGroups: ["kubedb.com"]
    apiVersions: ["v1"]
    resources: ["proxysqls"]
    operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.MariaDB }}
- name: mariadbwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kubedb-webhook-server.fullname" . }}
      path: /validate-kubedb-com-v1-mariadb
      port: 9443
    caBundle: {{ $._caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["v1"]
      resources: ["mariadbs"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.ZooKeeper }}
- name: zookeeperwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/zookeeperwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["zookeepers"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.RabbitMQ }}
- name: rabbitmqwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/rabbitmqwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["rabbitmqs"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Druid }}
- name: druidwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/druidwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["druids"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Cassandra }}
- name: cassandrawebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/cassandrawebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["cassandras"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.ClickHouse }}
- name: clickhousewebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/clickhousewebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["clickhouses"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Kafka }}
- name: kafkawebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/kafkawebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["v1"]
      resources: ["kafkas"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
- name: connectclusterwebhook.validators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kafka.kubedb.com/v1alpha1/connectclusterwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kafka.kubedb.com"]
      apiVersions: ["*"]
      resources: ["connectclusters"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
- name: connectorwebhook.validators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kafka.kubedb.com/v1alpha1/connectorwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kafka.kubedb.com"]
      apiVersions: ["*"]
      resources: ["connectors"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
- name: restproxywebhook.validators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kafka.kubedb.com/v1alpha1/restproxywebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kafka.kubedb.com"]
      apiVersions: ["*"]
      resources: ["restproxies"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
- name: schemaregistrywebhook.validators.kafka.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kafka.kubedb.com/v1alpha1/schemaregistrywebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kafka.kubedb.com"]
      apiVersions: ["*"]
      resources: ["schemaregistries"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Singlestore }}
- name: singlestorewebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/singlestorewebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["singlestores"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Solr }}
- name: solrwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/solrwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["solrs"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.Pgpool }}
- name: pgpoolwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/pgpoolwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["pgpools"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- if $featureGates.MSSQLServer }}
- name: mssqlserverwebhook.validators.kubedb.com
  clientConfig:
    service:
      namespace: default
      name: kubernetes
      path: /apis/validators.kubedb.com/v1alpha1/mssqlserverwebhooks
    caBundle: {{ $caCrt }}
  rules:
    - apiGroups: ["kubedb.com"]
      apiVersions: ["*"]
      resources: ["mssqlservers"]
      operations: ["CREATE", "UPDATE", "DELETE"]
  admissionReviewVersions: ["v1beta1"]
  failurePolicy: {{ .Values.apiserver.webhook.failurePolicy }}
  sideEffects: None
{{- end }}
{{- end }}
{{- end }}
