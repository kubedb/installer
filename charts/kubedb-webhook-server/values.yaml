##
## KubeDB chart configuration
##
# Declare variables to be passed into your templates.

# Overrides name template
nameOverride: ""
# Overrides fullname template
fullnameOverride: ""
# Number of KubeDB webhook server replicas to create (only 1 is supported)
replicaCount: 1
# Docker registry fqdn used to pull KubeDB related images
# Set this to use docker registry hosted at ${registryFQDN}/${registry}/${image}
registryFQDN: ghcr.io
# Docker registry containing KubeDB images
server:
  # Docker registry used to pull KubeDB webhook server image
  registry: kubedb
  # KubeDB webhook server container image
  repository: kubedb-webhook-server
  # KubeDB webhook server container image tag
  tag: ""
  # Security options this container should run with
  securityContext: # +doc-gen:break
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 65534
    seccompProfile:
      type: RuntimeDefault
  # Compute Resources required by this container
  resources: {}
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

featureGates:
  Cassandra: false
  ClickHouse: false
  Druid: false
  Elasticsearch: true
  FerretDB: false
  Kafka: true
  MariaDB: true
  Memcached: false
  MongoDB: true
  MSSQLServer: false
  MySQL: true
  PerconaXtraDB: true
  PgBouncer: false
  Pgpool: false
  Postgres: true
  ProxySQL: true
  RabbitMQ: false
  Redis: true
  Singlestore: false
  Solr: false
  ZooKeeper: false

# Specify an array of imagePullSecrets.
# Secrets must be manually created in the namespace.
#
# Example:
# helm template charts/kubedb-webhook-server \
#   --set imagePullSecrets[0].name=sec0 \
#   --set imagePullSecrets[1].name=sec1
imagePullSecrets: []
# Container image pull policy
imagePullPolicy: IfNotPresent
# If true, installs KubeDB webhook server as critical addon
criticalAddon: false
# Log level for webhook server
logLevel: 3
# Annotations applied to webhook server deployment
annotations: {}
# Annotations passed to webhook server pod(s).
podAnnotations: {}
# Node labels for pod assignment
nodeSelector: # +doc-gen:break
  kubernetes.io/os: linux
# Tolerations for pod assignment
tolerations: []
# Affinity rules for pod assignment
affinity: {}
# Security options the webhook server pod should run with.
podSecurityContext: {}
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
apiserver:
  # The minimum priority the webhook api group should have at least. Please see
  # https://github.com/kubernetes/kube-aggregator/blob/release-1.9/pkg/apis/apiregistration/v1beta1/types.go#L58-L64
  # for more information on proper values of this field.
  groupPriorityMinimum: 10000
  # The ordering of the webhook api inside of the group. Please see
  # https://github.com/kubernetes/kube-aggregator/blob/release-1.9/pkg/apis/apiregistration/v1beta1/types.go#L66-L70
  # for more information on proper values of this field
  versionPriority: 15
  # If true, mutating webhook is configured for KubeDB CRDss
  enableMutatingWebhook: true
  # If true, validating webhook is configured for KubeDB CRDss
  enableValidatingWebhook: true
  # CA certificate used by the Kubernetes api server. This field is automatically assigned by the webhook server.
  ca: not-ca-cert
  # If true, uses kube-apiserver FQDN for AKS cluster to workaround https://github.com/Azure/AKS/issues/522 (default true)
  useKubeapiserverFqdnForAks: true
  healthcheck:
    # healthcheck configures the readiness and liveliness probes for the webhook server pod.
    enabled: false
  # Port used to expose the webhook server apiserver
  port: 8443
  servingCerts:
    # If true, generates on install/upgrade the certs that allow the kube-apiserver (and potentially ServiceMonitor)
    # to authenticate webhook servers pods. Otherwise specify certs in `apiserver.servingCerts.{caCrt, serverCrt, serverKey}`.
    generate: true
    # CA certficate used by serving certificate of webhook server.
    caCrt: ""
    # Serving certficate used by webhook server.
    serverCrt: ""
    # Private key for the serving certificate used by webhook server.
    serverKey: ""
  webhook:
    failurePolicy: Ignore

monitoring:
  # Name of monitoring agent (one of "prometheus.io", "prometheus.io/operator", "prometheus.io/builtin")
  agent: ""
  serviceMonitor:
    # Specify the labels for ServiceMonitor.
    # Prometheus crd will select ServiceMonitor using these labels.
    # Only usable when monitoring agent is `prometheus.io/webhook server`.
    labels: # +doc-gen:break
      monitoring.appscode.com/prometheus: auto

# If true, uses HostNetwork for pods.
# This is required in EKS using Cilium with VxLAN overlay
hostNetwork: false

defaultSeccompProfileType: ""
