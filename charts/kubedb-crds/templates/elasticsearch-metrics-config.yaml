apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: es-metrics-config
spec:
  targetRef:
    apiVersion: kubedb.com/v1alpha2
    kind: Elasticsearch
  metrics:
    - name: kubedb_elasticsearch_info
      help: "Kubedb elasticsearch information"
      type: gauge
      labels:
        - key: version
          valuePath: .spec.version
        - key: storageType
          valuePath: .spec.storageType
        - key: enableSSL
          valuePath: .spec.enableSSL
        - key: terminationPolicy
          valuePath: .spec.terminationPolicy
        - key: storageClassName
          valuePath: .spec.storage.storageClassName
      metricValue:
        value: 1
    
    - name: kubedb_elasticsearch_replicas
      help: "Number of elasticsearch replicas in general mode"
      type: gauge
      field:
        path: .spec.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.replicas

    - name: kubedb_elasticsearch_storage_bytes
      help: "Available storage size in bytes"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: storage
          valuePath: .spec.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
    
    - name: kubedb_elasticsearch_tls_info
      help: "Elasticsearch database tls info"
      type: gauge
      labels:
        - key: issuers_name
          valuePath: .spec.tls.issuerRef.name
      metricValue:
        value: 1
    
    - name: kubedb_elasticsearch_status_conditions
      help: "Elasticsearch instance status condition"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: type
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1
    
    - name: kubedb_elasticsearch_status_phase
      help: "Elasticsearch instance current phase"
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Ready
            metricValue:
              valueFromExpression: "toInt(phase == 'Ready')"
          - labelValue: Halted
            metricValue:
              valueFromExpression: "toInt(phase == 'Halted')"
          - labelValue: Provisioning
            metricValue:
              valueFromExpression: "toInt(phase == 'Provisioning')"
          - labelValue: Critical
            metricValue:
              valueFromExpression: "toInt(phase == 'Critical')"
          - labelValue: NotReady
            metricValue:
              valueFromExpression: "toInt(phase == 'NotReady')"
          - labelValue: DataRestoring
            metricValue:
              valueFromExpression: "toInt(phase == 'DataRestoring')"
    
    - name: kubedb_elasticsearch_monitoring_info  
      help: "Elastic monitoring agent info"
      type: gauge
      labels:
        - key: agent
          valuePath: .spec.monitor.agent
      metricValue:
        value: 1

    ##### Metrics for Master topology #####

    - name: kubedb_elasticsearch_master_node_replicas
      help: "Number of replicas for elasticsearch master node"
      type: gauge
      field:
        path: .spec.topology.master.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.master.replicas
    
    - name: kubedb_elasticsearch_master_node_storage_bytes
      help: "Available storage for elastic search master node"
      type: gauge
      params:
        - key: storage
          valuePath: .spec.topology.master.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
      
    - name: kubedb_elasticsearch_master_node_storage_class_info
      help: "Elasticsearch master node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.master.storage.storageClassName
      metricValue:
        value: 1

    - name: kubedb_elasticsearch_master_node_cpu_request
      help: "Requested cpu by master node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.master.resources.requests.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_master_node_cpu_limit
      help: "CPU limit for master node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.master.resources.limits.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_master_node_memory_request
      help: "Requested memory by master node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.master.resources.requests.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_master_node_memory_limit
      help: "Memory limit for master node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.master.resources.limits.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)    

    - name: kubedb_elasticsearch_master_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.master.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.master.maxUnavailable
    
    ##### Metrics for Data topology #####

    - name: kubedb_elasticsearch_data_node_replicas
      help: "Number of replicas for elasticsearch data node"
      type: gauge
      field:
        path: .spec.topology.data.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.data.replicas
    
    - name: kubedb_elasticsearch_data_node_storage_bytes
      help: "Available storage for elastic search data node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: storage
          valuePath: .spec.topology.data.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
      
    - name: kubedb_elasticsearch_data_node_storage_class_info
      help: "Elasticsearch data node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.data.storage.storageClassName
      metricValue:
        value: 1
    
    - name: kubedb_elasticsearch_data_node_cpu_request
      help: "Requested cpu by data node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.data.resources.requests.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_data_node_cpu_limit
      help: "CPU limit for data node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.data.resources.limits.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_data_node_memory_request
      help: "Requested memory by data node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.data.resources.requests.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_data_node_memory_limit
      help: "Memory limit for data node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.data.resources.limits.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)    

    - name: kubedb_elasticsearch_data_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.data.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.data.maxUnavailable
    
      ##### Metrics for DataContent topology #####

    - name: kubedb_elasticsearch_datacontent_node_replicas
      help: "Number of replicas for elasticsearch dataContent node"
      type: gauge
      field:
        path: .spec.topology.dataContent.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataContent.replicas
    
    - name: kubedb_elasticsearch_datacontent_node_storage_bytes
      help: "Available storage for elastic search dataContent node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: storage
          valuePath: .spec.topology.dataContent.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
      
    - name: kubedb_elasticsearch_datacontent_node_storage_class_info
      help: "Elasticsearch dataContent node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.dataContent.storage.storageClassName
      metricValue:
        value: 1
    
    - name: kubedb_elasticsearch_datacontent_node_cpu_request
      help: "Requested cpu by dataContent node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.dataContent.resources.requests.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_datacontent_node_cpu_limit
      help: "CPU limit for dataContent node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.dataContent.resources.limits.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_datacontent_node_memory_request
      help: "Requested memory by dataContent node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.dataContent.resources.requests.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_datacontent_node_memory_limit
      help: "Memory limit for dataContent node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.dataContent.resources.limits.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)  
    
    - name: kubedb_elasticsearch_datacontent_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.dataContent.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataContent.maxUnavailable

    ##### Metrics for DataHot topology #####

    - name: kubedb_elasticsearch_datahot_node_replicas
      help: "Number of replicas for elasticsearch dataHot node"
      type: gauge
      field:
        path: .spec.topology.dataHot.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataHot.replicas
    
    - name: kubedb_elasticsearch_datahot_node_storage_bytes
      help: "Available storage for elastic search dataHot node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: storage
          valuePath: .spec.topology.dataHot.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
      
    - name: kubedb_elasticsearch_datahot_node_storage_class_info
      help: "Elasticsearch dataHot node information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.dataHot.storage.storageClassName
      metricValue:
        value: 1

    - name: kubedb_elasticsearch_datahot_node_cpu_request
      help: "Requested cpu by dataHot node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.dataHot.resources.requests.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_datahot_node_cpu_limit
      help: "CPU limit for dataHot node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.dataHot.resources.limits.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_datahot_node_memory_request
      help: "Requested memory by dataHot node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.dataHot.resources.requests.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_datahot_node_memory_limit
      help: "Memory limit for dataHot node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.dataHot.resources.limits.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)  
    
    - name: kubedb_elasticsearch_datahot_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.dataHot.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataHot.maxUnavailable
  
    ##### Metrics for DataWarm topology #####
    
    - name: kubedb_elasticsearch_datawarm_node_replicas
      help: "Number of replicas for elasticsearch dataWarm node"
      type: gauge
      field:
        path: .spec.topology.dataWarm.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataWarm.replicas
    
    - name: kubedb_elasticsearch_datawarm_node_storage_bytes
      help: "Available storage for elastic search dataWarm node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: storage
          valuePath: .spec.topology.dataWarm.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
      
    - name: kubedb_elasticsearch_datawarm_node_storage_class_info
      help: "Elasticsearch dataWarm node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.dataWarm.storage.storageClassName
      metricValue:
        value: 1
    
    - name: kubedb_elasticsearch_datawarm_node_cpu_request
      help: "Requested cpu by dataWarm node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.dataWarm.resources.requests.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_datawarm_node_cpu_limit
      help: "CPU limit for dataWarm node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.dataWarm.resources.limits.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_datawarm_node_memory_request
      help: "Requested memory by dataWarm node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.dataWarm.resources.requests.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_datawarm_node_memory_limit
      help: "Memory limit for dataWarm node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.dataWarm.resources.limits.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)
    
    - name: kubedb_elasticsearch_datawarm_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.dataWarm.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataWarm.maxUnavailable

    ##### Metrics for DataCold topology #####
    
    - name: kubedb_elasticsearch_datacold_node_replicas
      help: "Number of replicas for elasticsearch dataCold node"
      type: gauge
      field:
        path: .spec.topology.dataCold.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataCold.replicas
    
    - name: kubedb_elasticsearch_datacold_node_storage_bytes
      help: "Available storage for elastic search dataCold node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: storage
          valuePath: .spec.topology.dataCold.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
      
    - name: kubedb_elasticsearch_datacold_node_storage_class_info
      help: "Elasticsearch dataCold node storage information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.dataCold.storage.storageClassName
      metricValue:
        value: 1
    
    - name: kubedb_elasticsearch_datacold_node_cpu_request
      help: "Requested cpu by dataCold node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.dataCold.resources.requests.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_datacold_node_cpu_limit
      help: "CPU limit for dataCold node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.dataCold.resources.limits.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_datacold_node_memory_request
      help: "Requested memory by dataCold node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.dataCold.resources.requests.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_datacold_node_memory_limit
      help: "Memory limit for dataCold node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.dataCold.resources.limits.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_datacold_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.dataCold.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataCold.maxUnavailable

    ##### Metrics for DataFrozen topology #####
    
    - name: kubedb_elasticsearch_datafrozen_node_replicas
      help: "Number of replicas for elasticsearch dataFrozen node"
      type: gauge
      field:
        path: .spec.topology.dataFrozen.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataFrozen.replicas
    
    - name: kubedb_elasticsearch_datafrozen_node_storage_bytes
      help: "Available storage for elastic search dataFrozen node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: storage
          valuePath: .spec.topology.dataFrozen.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
      
    - name: kubedb_elasticsearch_datafrozen_node_storage_class_info
      help: "Elasticsearch dataFrozen node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.dataFrozen.storage.storageClassName
      metricValue:
        value: 1
    
    - name: kubedb_elasticsearch_datafrozen_node_cpu_request
      help: "Requested cpu by dataFrozen node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.dataFrozen.resources.requests.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_datafrozen_node_cpu_limit
      help: "CPU limit for dataFrozen node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.dataFrozen.resources.limits.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_datafrozen_node_memory_request
      help: "Requested memory by dataFrozen node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.dataFrozen.resources.requests.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_datafrozen_node_memory_limit
      help: "Memory limit for dataFrozen node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.dataFrozen.resources.limits.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)
    
    - name: kubedb_elasticsearch_datafrozen_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.dataFrozen.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.dataFrozen.maxUnavailable

    ##### Metrics for Ingest topology #####
    
    - name: kubedb_elasticsearch_ingest_node_replicas
      help: "Number of replicas for elasticsearch ingest node"
      type: gauge
      field:
        path: .spec.topology.ingest.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.ingest.replicas
    
    - name: kubedb_elasticsearch_ingest_node_storage_bytes
      help: "Available storage for elastic search ingest node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: storage
          valuePath: .spec.topology.ingest.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
      
    - name: kubedb_elasticsearch_ingest_node_storage_class_info
      help: "Elasticsearch ingest node storage class information"
      type: gauge
      labels: 
        - key: storage_className
          valuePath: .spec.topology.ingest.storage.storageClassName
      metricValue:
        value: 1

    - name: kubedb_elasticsearch_ingest_node_cpu_request
      help: "Requested cpu by ingest node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.ingest.resources.requests.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_ingest_node_cpu_limit
      help: "CPU limit for ingest node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.ingest.resources.limits.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_ingest_node_memory_request
      help: "Requested memory by ingest node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.ingest.resources.requests.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_ingest_node_memory_limit
      help: "Memory limit for ingest node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.ingest.resources.limits.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_ingest_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.ingest.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.ingest.maxUnavailable

    ##### Metrics for ML topology #####
    
    - name: kubedb_elasticsearch_ml_node_replicas
      help: "Number of replicas for elasticsearch ml node"
      type: gauge
      field:
        path: .spec.topology.ml.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.ml.replicas
    
    - name: kubedb_elasticsearch_ml_node_storage_bytes
      help: "Available storage for elastic search ml node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: storage
          valuePath: .spec.topology.ml.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
      
    - name: kubedb_elasticsearch_ml_node_storage_class_info
      help: "Elasticsearch ml node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.ml.storage.storageClassName
      metricValue:
        value: 1

    - name: kubedb_elasticsearch_ml_node_cpu_request
      help: "Requested cpu by ml node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.ml.resources.requests.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_ml_node_cpu_limit
      help: "CPU limit for ml node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.ml.resources.limits.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_ml_node_memory_request
      help: "Requested memory by ml node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.ml.resources.requests.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_ml_node_memory_limit
      help: "Memory limit for ml node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.ml.resources.limits.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)
      
    - name: kubedb_elasticsearch_ml_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.ml.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.ml.maxUnavailable

    ##### Metrics for transform topology #####
    
    - name: kubedb_elasticsearch_transform_node_replicas
      help: "Number of replicas for elasticsearch transform node"
      type: gauge
      field:
        path: .spec.topology.transform.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.transform.replicas
    
    - name: kubedb_elasticsearch_transform_node_storage_bytes
      help: "Available storage for elastic search transform node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: storage
          valuePath: .spec.topology.transform.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
      
    - name: kubedb_elasticsearch_transform_node_storage_class_info
      help: "Elasticsearch transform node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.transform.storage.storageClassName
      metricValue:
        value: 1
    
    - name: kubedb_elasticsearch_transform_node_cpu_request
      help: "Requested cpu by transform node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.transform.resources.requests.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_transform_node_cpu_limit
      help: "CPU limit for transform node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.transform.resources.limits.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_transform_node_memory_request
      help: "Requested memory by transform node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.transform.resources.requests.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_transform_node_memory_limit
      help: "Memory limit for transform node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.transform.resources.limits.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)
    
    - name: kubedb_elasticsearch_transform_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.transform.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.transform.maxUnavailable

    ##### Metrics for coordinating topology #####
    
    - name: kubedb_elasticsearch_coordinating_node_replicas
      help: "Number of replicas for elasticsearch coordinating node"
      type: gauge
      field:
        path: .spec.topology.coordinating.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.coordinating.replicas
    
    - name: kubedb_elasticsearch_coordinating_node_storage_bytes
      help: "Available storage for elastic search coordinating node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: storage
          valuePath: .spec.topology.coordinating.storage.resources.requests.storage
      metricValue:
        valueFromExpression: calculateMemory(storage)
      
    - name: kubedb_elasticsearch_coordinating_node_storage_class_info
      help: "Elasticsearch coordinating node storage class information"
      type: gauge
      labels:
        - key: storage_className
          valuePath: .spec.topology.coordinating.storage.storageClassName
      metricValue:
        value: 1
    
    - name: kubedb_elasticsearch_coordinating_node_cpu_request
      help: "Requested cpu by coordinating node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.coordinating.resources.requests.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_coordinating_node_cpu_limit
      help: "CPU limit for coordinating node"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: cpu
          valuePath: .spec.topology.coordinating.resources.limits.cpu
      metricValue:
        valueFromExpression: calculateCPU(cpu)

    - name: kubedb_elasticsearch_coordinating_node_memory_request
      help: "Requested memory by coordinating node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.coordinating.resources.requests.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)

    - name: kubedb_elasticsearch_coordinating_node_memory_limit
      help: "Memory limit for coordinating node"
      type: gauge
      labels:
        - key: unit
          value: bytes
      params:
        - key: memory
          valuePath: .spec.topology.coordinating.resources.limits.memory
      metricValue:
        valueFromExpression: calculateMemory(memory)
    
    - name: kubedb_elasticsearch_coordinating_node_max_unavailable
      help: "Maximum number of pods unavailable after an eviction"
      type: gauge
      field:
        path: .spec.topology.coordinating.maxUnavailable
        type: Integer
      metricValue:
        valueFromPath: .spec.topology.coordinating.maxUnavailable
  
