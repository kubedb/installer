{{- $major := default "0" .Capabilities.KubeVersion.Major | trimSuffix "+" | int64 }}
{{- $minor := default "0" .Capabilities.KubeVersion.Minor | trimSuffix "+" | int64 }}
{{- $criticalAddon := and .Values.criticalAddon (or (eq .Release.Namespace "kubedb-schema-manager-system") (and (ge $major 1) (ge $minor 17))) -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kubedb-schema-manager.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "kubedb-schema-manager.labels" . | nindent 4 }}
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "kubedb-schema-manager.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kubedb-schema-manager.selectorLabels" . | nindent 8 }}
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    spec:
      {{- include "appscode.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "kubedb-schema-manager.serviceAccountName" . }}
      containers:
      - name: operator
        securityContext:
          {{- toYaml .Values.operator.securityContext | nindent 10 }}
        image: {{ include "operator.registry" . }}/{{ .Values.operator.repository }}:{{ .Values.operator.tag }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        {{- with .Values.proxy.http }}
          - name: HTTP_PROXY
            value: {{ . }}
        {{- end }}
        {{- with .Values.proxy.https }}
          - name: HTTPS_PROXY
            value: {{ . }}
        {{- end }}
        {{- with .Values.proxy.no }}
          - name: NO_PROXY
            value: {{ . }}
        {{- end }}
        args:
          - run
        #   - --webhook-name={{ include "webhook.serviceName" . }}
        #   - --webhook-namespace={{ .Release.Namespace }}
        # {{- if .Values.license }}
        #   - --license-file=/var/run/secrets/appscode/license/key.txt
        # {{- end }}
        resources:
          {{- toYaml .Values.operator.resources | nindent 10 }}
        {{- if .Values.webhook.enableValidatingWebhook }}
        ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
        {{- end }}
        volumeMounts:
        {{- if .Values.license }}
          - mountPath: /var/run/secrets/appscode/license
            name: license
        {{- end }}
        {{- if .Values.webhook.enableValidatingWebhook }}
          - mountPath: /tmp/k8s-webhook-server/serving-certs
            name: cert
            readOnly: true
        {{- end }}
      volumes:
      {{- if .Values.license }}
        - name: license
          secret:
            defaultMode: 420
            secretName: {{ include "kubedb-schema-manager.fullname" . }}-license
      {{- end }}
      {{- if .Values.webhook.enableValidatingWebhook }}
        - name: cert
          secret:
            defaultMode: 420
            secretName: {{ include "webhook.serviceName" . }}-cert
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
    {{- if or .Values.tolerations $criticalAddon }}
      tolerations:
      {{- with .Values.tolerations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $criticalAddon }}
        - key: CriticalAddonsOnly
          operator: Exists
      {{- end -}}
    {{- end -}}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if $criticalAddon }}
      priorityClassName: system-cluster-critical
    {{- end -}}
