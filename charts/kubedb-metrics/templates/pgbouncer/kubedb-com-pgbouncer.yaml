apiVersion: metrics.appscode.com/v1alpha1
kind: MetricsConfiguration
metadata:
  name: kubedb-com-pgbouncer
spec:
  targetRef:
    apiVersion: kubedb.com/v1
    kind: PgBouncer
  commonLabels:
    - key: app
      valuePath: .metadata.name
    - key: app_namespace
      valuePath: .metadata.namespace
  metrics:
    - name: created
      help: "Unix creation timestamp"
      type: gauge
      field:
        path: .metadata.creationTimestamp
        type: DateTime
      metricValue:
        valueFromPath: .metadata.creationTimestamp

    - name: status_phase
      help: "PgBouncer instance current phase"
      type: gauge
      field:
        path: .status.phase
        type: String
      params:
        - key: phase
          valuePath: .status.phase
      states:
        labelKey: phase
        values:
          - labelValue: Ready
            metricValue:
              valueFromExpression: "int(phase == 'Ready')"
          - labelValue: Halted
            metricValue:
              valueFromExpression: "int(phase == 'Halted')"
          - labelValue: Provisioning
            metricValue:
              valueFromExpression: "int(phase == 'Provisioning')"
          - labelValue: Critical
            metricValue:
              valueFromExpression: "int(phase == 'Critical')"
          - labelValue: NotReady
            metricValue:
              valueFromExpression: "int(phase == 'NotReady')"
          - labelValue: DataRestoring
            metricValue:
              valueFromExpression: "int(phase == 'DataRestoring')"

    - name: info
      help: "PgBouncer instance information"
      type: gauge
      labels:
        - key: sslMode
          valuePath: .spec.sslMode
        - key: backend
          valuePath: .spec.database.databaseName
        - key: deletionPolicy
          valuePath: .spec.deletionPolicy
        - key: version
          valuePath: .spec.version
      metricValue:
        value: 1

    - name: status_conditions
      help: "PgBouncer instance status condition"
      type: gauge
      field:
        path: .status.conditions
        type: Array
      labels:
        - key: type
          valuePath: .status.conditions[*].type
        - key: status
          valuePath: .status.conditions[*].status
      metricValue:
        value: 1

    - name: resource_request_cpu
      help: "Requested CPU by PgBouncer in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_memory
      help: "Requested memory by PgBouncer in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_request_storage
      help: "Requested storage by PgBouncer in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_requests(obj, resourceType)

    - name: resource_limit_cpu
      help: "CPU limit for PgBouncer in core"
      type: gauge
      labels:
        - key: unit
          value: core
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: cpu
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_memory
      help: "Memory limit for PgBouncer in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: memory
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: resource_limit_storage
      help: "Storage limit for PgBouncer in byte"
      type: gauge
      labels:
        - key: unit
          value: byte
      params:
        - key: obj
          valuePath: .
        - key: resourceType
          value: storage
      metricValue:
        valueFromExpression: total_resource_limits(obj, resourceType)

    - name: replicas
      help: "Number of replicas in the PgBouncer"
      type: gauge
      field:
        path: .spec.replicas
        type: Integer
      metricValue:
        valueFromPath: .spec.replicas