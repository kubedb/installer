# Default values for kubedb-kubestash-catalog.

proxies:
  dockerHub: ""
  dockerLibrary: ""
  ghcr: ghcr.io
  quay: quay.io
  kubernetes: registry.k8s.io
  microsoft: mcr.microsoft.com
  appscode: r.appscode.com

# registryFQDN: harbor.appscode.ninja
# proxies:
#   dockerHub: harbor.appscode.ninja/dockerhub
#   dockerLibrary: ""
#   ghcr: harbor.appscode.ninja/ghcr
#   quay: harbor.appscode.ninja/quay
#   kubernetes: harbor.appscode.ninja/k8s
#   microsoft: harbor.appscode.ninja/mcr
#   appscode: harbor.appscode.ninja/ac

# Number of seconds to wait for the database to be ready before backup/restore process.
waitTimeout: 300

featureGates:
  Druid: true
  Elasticsearch: true
  FerretDB: false
  Kafka: true
  MariaDB: true
  Memcached: true
  MSSQLServer: true
  MongoDB: true
  MySQL: true
  PerconaXtraDB: true
  PgBouncer: true
  Pgpool: false
  Postgres: true
  ProxySQL: true
  RabbitMQ: false
  Redis: true
  Singlestore: true
  Solr: false
  ZooKeeper: true

druid:
  # optional argument to send mysqldump or pg_dump command
  backup:
    # Arguments to pass to mysqldump or pg_dump command  during bakcup process
    args: ""
  restore:
    # Arguments to pass to mysqldump or pg_dump command during restore process
    args: ""
elasticsearch:
  # optional argument to send multielasticdump
  backup:
    # Arguments to pass to `multielasticdump` command  during backup process
    args: ""
  restore:
    # Arguments to pass to `multielasticdump` command during restore process
    args: ""
opensearch:
  # optional argument to send multielasticdump
  backup:
    # Arguments to pass to `multielasticdump` command  during backup process
    args: ""
  restore:
    # Arguments to pass to `multielasticdump` command during restore process
    args: ""
kubedbmanifest:
  # If true, deploys KubeDBManifest addon
  enabled: true
mongodb:
  # Maximum concurrency to perform backup or restore tasks
  maxConcurrency: 3
  # optional argument to send mongodump or mongorestore command
  backup:
    # Arguments to pass to `mongodump` command during backup process
    args: ""
  restore:
    # Arguments to pass to `mongorestore` command during restore process
    args: ""
mssqlserver:
  # Maximum concurrency to perform backup or restore tasks
  maxConcurrency: 3
  backup:
    args: ""
  restore:
    args: ""
postgres:
  backup:
    # Postgres dump command, can either be: pg_dumpall  or pg_dump
    cmd: "pg_dumpall"
    # Arguments to pass to `backup.cmd` command during backup process
    args: ""
  restore:
    # Arguments to pass to `psql` command during restore process
    args: ""
mysql:
  # optional argument to send mysqldump or mysql command
  backup:
    # Arguments to pass to `mysqldump` command  during bakcup process
    args: ""
  restore:
    # Arguments to pass to `mysql` command during restore process
    args: ""
mariadb:
  # optional argument to send mariadb-dump or mariadb command
  backup:
    # Arguments to pass to `mariadb-dump` command  during bakcup process
    args: ""
  restore:
    # Arguments to pass to `mariadb` command during restore process
    args: ""
redis:
  # optional argument to send redis-dump or redis command
  backup:
    # Arguments to pass to `redis-dump` command  during bakcup process
    args: ""
  restore:
    # Arguments to pass to `redis` command during restore process
    args: ""
singlestore:
  # optional argument to send singlestore-dump or singlestore command
  backup:
    # Arguments to pass to `singlestore-dump` command  during bakcup process
    args: ""
  restore:
    # Arguments to pass to `singlestore` command during restore process
    args: ""
zookeeper:
  # optional argument to send zk-dump or zookeeper command
  backup:
    # Arguments to pass to `zk-dump` command  during bakcup process
    args: ""
  restore:
    # Arguments to pass to `zookeeper` command during restore process
    args: ""
kubedbverifier:
  enabled: true
