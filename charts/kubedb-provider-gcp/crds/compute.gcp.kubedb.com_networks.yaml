apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  name: networks.compute.gcp.kubedb.com
spec:
  group: compute.gcp.kubedb.com
  names:
    categories:
    - crossplane
    - managed
    - gcp
    kind: Network
    listKind: NetworkList
    plural: networks
    singular: network
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Network is the Schema for the Networks API. Manages a VPC network
          or legacy network resource on GCP.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NetworkSpec defines the desired state of Network
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicy field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  autoCreateSubnetworks:
                    description: "When set to true, the network is created in \"auto
                      subnet mode\" and it will create a subnet for each region automatically
                      across the 10.128.0.0/9 address range. When set to false, the
                      network is created in \"custom subnet mode\" so the user can
                      explicitly connect subnetwork resources. When set to 'true',
                      the network is created in \"auto subnet mode\" and it will create
                      a subnet for each region automatically across the '10.128.0.0/9'
                      address range. \n When set to 'false', the network is created
                      in \"custom subnet mode\" so the user can explicitly connect
                      subnetwork resources."
                    type: boolean
                  deleteDefaultRoutesOnCreate:
                    description: If set to true, default routes (0.0.0.0/0) will be
                      deleted immediately after network creation. Defaults to false.
                      If set to 'true', default routes ('0.0.0.0/0') will be deleted
                      immediately after network creation. Defaults to 'false'.
                    type: boolean
                  description:
                    description: An optional description of this resource. The resource
                      must be recreated to modify this field. An optional description
                      of this resource. The resource must be recreated to modify this
                      field.
                    type: string
                  enableUlaInternalIpv6:
                    description: Enable ULA internal ipv6 on this network. Enabling
                      this feature will assign a /48 from google defined ULA prefix
                      fd20::/20. Enable ULA internal ipv6 on this network. Enabling
                      this feature will assign a /48 from google defined ULA prefix
                      fd20::/20.
                    type: boolean
                  internalIpv6Range:
                    description: When enabling ula internal ipv6, caller optionally
                      can specify the /48 range they want from the google defined
                      ULA prefix fd20::/20. The input must be a valid /48 ULA IPv6
                      address and must be within the fd20::/20. Operation will fail
                      if the speficied /48 is already in used by another resource.
                      If the field is not speficied, then a /48 range will be randomly
                      allocated from fd20::/20 and returned via this field. When enabling
                      ula internal ipv6, caller optionally can specify the /48 range
                      they want from the google defined ULA prefix fd20::/20. The
                      input must be a valid /48 ULA IPv6 address and must be within
                      the fd20::/20. Operation will fail if the speficied /48 is already
                      in used by another resource. If the field is not speficied,
                      then a /48 range will be randomly allocated from fd20::/20 and
                      returned via this field.
                    type: string
                  mtu:
                    description: Maximum Transmission Unit in bytes. The default value
                      is 1460 bytes. The minimum value for this field is 1300 and
                      the maximum value is 8896 bytes (jumbo frames). Note that packets
                      larger than 1500 bytes (standard Ethernet) can be subject to
                      TCP-MSS clamping or dropped with an ICMP Fragmentation-Needed
                      message if the packets are routed to the Internet or other VPCs
                      with varying MTUs. Maximum Transmission Unit in bytes. The default
                      value is 1460 bytes. The minimum value for this field is 1300
                      and the maximum value is 8896 bytes (jumbo frames). Note that
                      packets larger than 1500 bytes (standard Ethernet) can be subject
                      to TCP-MSS clamping or dropped with an ICMP 'Fragmentation-Needed'
                      message if the packets are routed to the Internet or other VPCs
                      with varying MTUs.
                    type: number
                  networkFirewallPolicyEnforcementOrder:
                    description: 'Set the order that Firewall Rules and Firewall Policies
                      are evaluated. Default value is AFTER_CLASSIC_FIREWALL. Possible
                      values are: BEFORE_CLASSIC_FIREWALL, AFTER_CLASSIC_FIREWALL.
                      Set the order that Firewall Rules and Firewall Policies are
                      evaluated. Default value: "AFTER_CLASSIC_FIREWALL" Possible
                      values: ["BEFORE_CLASSIC_FIREWALL", "AFTER_CLASSIC_FIREWALL"]'
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  routingMode:
                    description: 'The network-wide routing mode to use. If set to
                      REGIONAL, this network''s cloud routers will only advertise
                      routes with subnetworks of this network in the same region as
                      the router. If set to GLOBAL, this network''s cloud routers
                      will advertise routes with all subnetworks of this network,
                      across regions. Possible values are: REGIONAL, GLOBAL. The network-wide
                      routing mode to use. If set to ''REGIONAL'', this network''s
                      cloud routers will only advertise routes with subnetworks of
                      this network in the same region as the router. If set to ''GLOBAL'',
                      this network''s cloud routers will advertise routes with all
                      subnetworks of this network, across regions. Possible values:
                      ["REGIONAL", "GLOBAL"]'
                    type: string
                type: object
              managementPolicy:
                default: FullControl
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicy
                  specifies the level of control Crossplane has over the managed external
                  resource. This field is planned to replace the DeletionPolicy field
                  in a future release. Currently, both could be set independently
                  and non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - FullControl
                - ObserveOnly
                - OrphanOnDelete
                type: string
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: NetworkStatus defines the observed state of Network.
            properties:
              atProvider:
                properties:
                  autoCreateSubnetworks:
                    description: "When set to true, the network is created in \"auto
                      subnet mode\" and it will create a subnet for each region automatically
                      across the 10.128.0.0/9 address range. When set to false, the
                      network is created in \"custom subnet mode\" so the user can
                      explicitly connect subnetwork resources. When set to 'true',
                      the network is created in \"auto subnet mode\" and it will create
                      a subnet for each region automatically across the '10.128.0.0/9'
                      address range. \n When set to 'false', the network is created
                      in \"custom subnet mode\" so the user can explicitly connect
                      subnetwork resources."
                    type: boolean
                  deleteDefaultRoutesOnCreate:
                    description: If set to true, default routes (0.0.0.0/0) will be
                      deleted immediately after network creation. Defaults to false.
                      If set to 'true', default routes ('0.0.0.0/0') will be deleted
                      immediately after network creation. Defaults to 'false'.
                    type: boolean
                  description:
                    description: An optional description of this resource. The resource
                      must be recreated to modify this field. An optional description
                      of this resource. The resource must be recreated to modify this
                      field.
                    type: string
                  enableUlaInternalIpv6:
                    description: Enable ULA internal ipv6 on this network. Enabling
                      this feature will assign a /48 from google defined ULA prefix
                      fd20::/20. Enable ULA internal ipv6 on this network. Enabling
                      this feature will assign a /48 from google defined ULA prefix
                      fd20::/20.
                    type: boolean
                  gatewayIpv4:
                    description: The gateway address for default routing out of the
                      network. This value is selected by GCP. The gateway address
                      for default routing out of the network. This value is selected
                      by GCP.
                    type: string
                  id:
                    description: an identifier for the resource with format projects/{{project}}/global/networks/{{name}}
                    type: string
                  internalIpv6Range:
                    description: When enabling ula internal ipv6, caller optionally
                      can specify the /48 range they want from the google defined
                      ULA prefix fd20::/20. The input must be a valid /48 ULA IPv6
                      address and must be within the fd20::/20. Operation will fail
                      if the speficied /48 is already in used by another resource.
                      If the field is not speficied, then a /48 range will be randomly
                      allocated from fd20::/20 and returned via this field. When enabling
                      ula internal ipv6, caller optionally can specify the /48 range
                      they want from the google defined ULA prefix fd20::/20. The
                      input must be a valid /48 ULA IPv6 address and must be within
                      the fd20::/20. Operation will fail if the speficied /48 is already
                      in used by another resource. If the field is not speficied,
                      then a /48 range will be randomly allocated from fd20::/20 and
                      returned via this field.
                    type: string
                  mtu:
                    description: Maximum Transmission Unit in bytes. The default value
                      is 1460 bytes. The minimum value for this field is 1300 and
                      the maximum value is 8896 bytes (jumbo frames). Note that packets
                      larger than 1500 bytes (standard Ethernet) can be subject to
                      TCP-MSS clamping or dropped with an ICMP Fragmentation-Needed
                      message if the packets are routed to the Internet or other VPCs
                      with varying MTUs. Maximum Transmission Unit in bytes. The default
                      value is 1460 bytes. The minimum value for this field is 1300
                      and the maximum value is 8896 bytes (jumbo frames). Note that
                      packets larger than 1500 bytes (standard Ethernet) can be subject
                      to TCP-MSS clamping or dropped with an ICMP 'Fragmentation-Needed'
                      message if the packets are routed to the Internet or other VPCs
                      with varying MTUs.
                    type: number
                  networkFirewallPolicyEnforcementOrder:
                    description: 'Set the order that Firewall Rules and Firewall Policies
                      are evaluated. Default value is AFTER_CLASSIC_FIREWALL. Possible
                      values are: BEFORE_CLASSIC_FIREWALL, AFTER_CLASSIC_FIREWALL.
                      Set the order that Firewall Rules and Firewall Policies are
                      evaluated. Default value: "AFTER_CLASSIC_FIREWALL" Possible
                      values: ["BEFORE_CLASSIC_FIREWALL", "AFTER_CLASSIC_FIREWALL"]'
                    type: string
                  project:
                    description: The ID of the project in which the resource belongs.
                      If it is not provided, the provider project is used.
                    type: string
                  routingMode:
                    description: 'The network-wide routing mode to use. If set to
                      REGIONAL, this network''s cloud routers will only advertise
                      routes with subnetworks of this network in the same region as
                      the router. If set to GLOBAL, this network''s cloud routers
                      will advertise routes with all subnetworks of this network,
                      across regions. Possible values are: REGIONAL, GLOBAL. The network-wide
                      routing mode to use. If set to ''REGIONAL'', this network''s
                      cloud routers will only advertise routes with subnetworks of
                      this network in the same region as the router. If set to ''GLOBAL'',
                      this network''s cloud routers will advertise routes with all
                      subnetworks of this network, across regions. Possible values:
                      ["REGIONAL", "GLOBAL"]'
                    type: string
                  selfLink:
                    description: The URI of the created resource.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
