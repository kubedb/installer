{{ if .Values.rbac.create }}
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:admin
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  - catalog.kubedb.com
  resources:
  - "*"
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubedb:core:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  resources:
  - elasticsearches
  - memcacheds
  - mongodbs
  - mysqls
  - postgreses
  - redises
  - snapshots
  verbs: ["*"]
- apiGroups:
  - kubedb.com
  resources:
  - dormantdatabases
  verbs: ["get", "list", "watch"]
- apiGroups:
  - catalog.kubedb.com
  resources:
  - elasticsearchversions
  - memcachedversions
  - mongodbversions
  - mysqlversions
  - postgresversions
  - redisversions
  verbs: ["get", "list", "watch"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: kubedb:core:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - kubedb.com
  resources:
  - dormantdatabases
  - elasticsearches
  - memcacheds
  - mongodbs
  - mysqls
  - postgreses
  - redises
  - snapshots
  verbs: ["get", "list", "watch"]
- apiGroups:
  - catalog.kubedb.com
  resources:
  - elasticsearchversions
  - memcachedversions
  - mongodbversions
  - mysqlversions
  - postgresversions
  - redisversions
  verbs: ["get", "list", "watch"]
{{ end }}
